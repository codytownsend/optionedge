{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Options Engine Configuration Schema",
  "description": "Configuration schema for the options trading engine",
  "properties": {
    "application": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Application name",
          "default": "options-engine"
        },
        "version": {
          "type": "string",
          "description": "Application version",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "environment": {
          "type": "string",
          "enum": ["development", "staging", "production"],
          "description": "Application environment"
        },
        "debug": {
          "type": "boolean",
          "description": "Enable debug mode",
          "default": false
        }
      },
      "required": ["name", "version", "environment"]
    },
    "api": {
      "type": "object",
      "properties": {
        "tradier": {
          "type": "object",
          "properties": {
            "base_url": {
              "type": "string",
              "format": "uri",
              "description": "Tradier API base URL"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300,
              "description": "Request timeout in seconds",
              "default": 30
            },
            "rate_limit": {
              "type": "object",
              "properties": {
                "requests_per_minute": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Max requests per minute"
                },
                "burst_size": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Burst size for rate limiting"
                }
              },
              "required": ["requests_per_minute"]
            }
          },
          "required": ["base_url"]
        },
        "yahoo": {
          "type": "object",
          "properties": {
            "base_url": {
              "type": "string",
              "format": "uri",
              "description": "Yahoo Finance API base URL"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300,
              "description": "Request timeout in seconds",
              "default": 30
            }
          },
          "required": ["base_url"]
        },
        "fred": {
          "type": "object",
          "properties": {
            "base_url": {
              "type": "string",
              "format": "uri",
              "description": "FRED API base URL"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300,
              "description": "Request timeout in seconds",
              "default": 30
            }
          },
          "required": ["base_url"]
        },
        "quiver": {
          "type": "object",
          "properties": {
            "base_url": {
              "type": "string",
              "format": "uri",
              "description": "QuiverQuant API base URL"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300,
              "description": "Request timeout in seconds",
              "default": 30
            }
          },
          "required": ["base_url"]
        }
      },
      "required": ["tradier", "yahoo", "fred", "quiver"]
    },
    "cache": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["memory", "redis", "null"],
          "description": "Cache implementation type",
          "default": "memory"
        },
        "default_ttl": {
          "type": "integer",
          "minimum": 1,
          "description": "Default TTL in seconds",
          "default": 3600
        },
        "max_size": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum cache size",
          "default": 10000
        },
        "redis": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Redis host"
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535,
              "description": "Redis port"
            },
            "db": {
              "type": "integer",
              "minimum": 0,
              "maximum": 15,
              "description": "Redis database number"
            },
            "password": {
              "type": "string",
              "description": "Redis password"
            }
          },
          "required": ["host", "port"]
        }
      },
      "required": ["type"]
    },
    "logging": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
          "description": "Logging level",
          "default": "INFO"
        },
        "format": {
          "type": "string",
          "description": "Log format string",
          "default": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
        },
        "file": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable file logging",
              "default": true
            },
            "path": {
              "type": "string",
              "description": "Log file path",
              "default": "logs/options_engine.log"
            },
            "max_size": {
              "type": "integer",
              "minimum": 1,
              "description": "Max log file size in MB",
              "default": 10
            },
            "backup_count": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of backup files to keep",
              "default": 5
            }
          }
        },
        "console": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable console logging",
              "default": true
            },
            "colors": {
              "type": "boolean",
              "description": "Enable colored output",
              "default": true
            }
          }
        }
      },
      "required": ["level"]
    },
    "trading": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "object",
          "properties": {
            "min_probability_of_profit": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Minimum probability of profit",
              "default": 0.65
            },
            "min_credit_to_max_loss": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Minimum credit to max loss ratio",
              "default": 0.33
            },
            "max_loss_per_trade": {
              "type": "number",
              "minimum": 0,
              "description": "Maximum loss per trade in dollars",
              "default": 500
            },
            "max_quote_age_minutes": {
              "type": "number",
              "minimum": 0,
              "description": "Maximum quote age in minutes",
              "default": 10
            },
            "max_delta_exposure": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Maximum delta exposure as fraction of NAV",
              "default": 0.30
            },
            "min_vega_exposure": {
              "type": "number",
              "maximum": 0,
              "description": "Minimum vega exposure as fraction of NAV",
              "default": -0.05
            },
            "max_trades_per_sector": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum trades per sector",
              "default": 2
            },
            "min_days_to_expiration": {
              "type": "integer",
              "minimum": 1,
              "description": "Minimum days to expiration",
              "default": 7
            },
            "max_days_to_expiration": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum days to expiration",
              "default": 45
            }
          }
        },
        "liquidity": {
          "type": "object",
          "properties": {
            "min_option_volume": {
              "type": "integer",
              "minimum": 0,
              "description": "Minimum option volume",
              "default": 10
            },
            "min_open_interest": {
              "type": "integer",
              "minimum": 0,
              "description": "Minimum open interest",
              "default": 100
            },
            "max_bid_ask_spread_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Maximum bid-ask spread percentage",
              "default": 0.50
            }
          }
        },
        "portfolio": {
          "type": "object",
          "properties": {
            "default_nav": {
              "type": "number",
              "minimum": 0,
              "description": "Default NAV in dollars",
              "default": 100000
            },
            "max_capital_per_trade": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Maximum capital per trade as fraction of NAV",
              "default": 0.05
            }
          }
        }
      },
      "required": ["constraints", "liquidity", "portfolio"]
    },
    "data": {
      "type": "object",
      "properties": {
        "refresh_intervals": {
          "type": "object",
          "properties": {
            "options_chains": {
              "type": "integer",
              "minimum": 1,
              "description": "Options chain refresh interval in seconds",
              "default": 300
            },
            "market_data": {
              "type": "integer",
              "minimum": 1,
              "description": "Market data refresh interval in seconds",
              "default": 60
            },
            "fundamentals": {
              "type": "integer",
              "minimum": 1,
              "description": "Fundamentals refresh interval in seconds",
              "default": 3600
            },
            "economic_data": {
              "type": "integer",
              "minimum": 1,
              "description": "Economic data refresh interval in seconds",
              "default": 86400
            }
          }
        },
        "symbols": {
          "type": "object",
          "properties": {
            "broad_market": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[A-Z]{1,5}$"
              },
              "description": "Broad market symbols to scan",
              "default": ["SPY", "QQQ", "IWM", "AAPL", "MSFT", "GOOGL", "AMZN", "TSLA", "META", "NVDA"]
            },
            "etf_flows": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[A-Z]{1,5}$"
              },
              "description": "ETF symbols for flow analysis",
              "default": ["SPY", "QQQ", "IWM", "XLF", "XLK", "XLE", "XLI", "XLV", "XLY", "XLP"]
            }
          }
        }
      },
      "required": ["refresh_intervals", "symbols"]
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable metrics collection",
              "default": true
            },
            "collection_interval": {
              "type": "integer",
              "minimum": 1,
              "description": "Metrics collection interval in seconds",
              "default": 60
            }
          }
        },
        "alerts": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable alerting",
              "default": false
            },
            "thresholds": {
              "type": "object",
              "properties": {
                "api_error_rate": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "API error rate threshold",
                  "default": 0.05
                },
                "processing_time": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Processing time threshold in seconds",
                  "default": 30
                }
              }
            }
          }
        }
      },
      "required": ["metrics"]
    }
  },
  "required": ["application", "api", "cache", "logging", "trading", "data", "monitoring"]
}